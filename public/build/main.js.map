{"version":3,"file":"main.js","sources":["../../main.js"],"sourcesContent":["// Modules to control application life and create native browser window\nconst { app, BrowserWindow } = require('electron');\nconst path = require('path');\nconst url = require('url');\nrequire('./src/backend/index');\n// Keep a reference for dev mode\nlet dev = false;\nconsole.log('default', process.defaultApp);\nif (process.defaultApp || /[\\\\/]electron-prebuilt[\\\\/]/.test(process.execPath) || /[\\\\/]electron[\\\\/]/.test(process.execPath)) {\n    dev = true;\n}\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow;\n\nfunction createWindow() {\n    // Create the browser window.\n    mainWindow = new BrowserWindow({\n        minWidth: 1024,\n        minHeight: 768,\n        show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            preload: path.join(__dirname, 'preload.js')\n        }\n    })\n    mainWindow.setMenu(null);\n    // and load the index.html of the app.\n    let indexPath;\n    if (dev && process.argv.indexOf('--noDevServer') === -1) {\n        indexPath = url.format({\n            protocol: 'http:',\n            host: 'localhost:8082',\n            pathname: 'index.html',\n            slashes: true\n        });\n    } else {\n        indexPath = url.format({\n            protocol: 'file:',\n            pathname: path.join(__dirname, 'dist', 'index.html'),\n            slashes: true\n        });\n    }\n    mainWindow.loadURL(indexPath);\n\n    // Don't show until we are ready and loaded\n    mainWindow.once('ready-to-show', () => {\n        mainWindow.show();\n        // Open the DevTools automatically if developing\n        if (dev) {\n            mainWindow.webContents.openDevTools();\n        }\n    });\n\n    // Emitted when the window is closed.\n    mainWindow.on('closed', function() {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        mainWindow = null;\n    });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow)\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function() {\n    // On OS X it is common for applications and their menu bar\n    // to stay active until the user quits explicitly with Cmd + Q\n    if (process.platform !== 'darwin') {\n        app.quit()\n    }\n})\n\napp.on('activate', function() {\n    // On OS X it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (mainWindow === null) {\n        createWindow()\n    }\n})\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here."],"names":[],"mappings":"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"}